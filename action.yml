name: "Copy to Another Repository"
description: "Copy selected files to another repository and create Pull Request (PR)."
author: "Sator Imaging"
branding:
  icon: copy
  color: purple

inputs:
  target-repo:
    required: false
    description: "Name of remote repository to copy file(s) from."
    default: "cisco-ospo/sample-project"
  output-repo:
    required: true
    description: "Name of the org/repo where the pull request will be filed."
    default: "cisco-ospo/outbound-review"
  output-branch:
    required: true
    description: "Base branch name to file the pull request against."
    default: "main"
  commit-message-prefix:
    required: false
    description: "Prefix for the git commit message."
    default: "[actions] "
  output-directory:
    required: false
    description: "Output directory to copy the file(s) to."
    default: "${{ github.event.repository.name }}"
  pr-branch-prefix:
    required: false
    description: "Prefix for the pull request branch name."
    default: "actions/${{ github.event.repository.name }}"
  pr-title:
    required: false
    description: "Title for the GitHub pull request."
    default: "ðŸ¤– GitHub Actions: ${{ github.event.repository.name }}"
  pr-message:
    required: false
    description: "Description for the GitHub pull request."
    default: "${{ github.workflow }} on ${{ github.server_url }}/${{ github.repository }}"
  git-name:
    required: false
    description: "Name of the committer/bot filing the pull request."
    default: "github-actions[bot]"
  git-email:
    required: false
    description: "Use your `@users.noreply.github.com` address if you want your icon shown in commit messages."
    default: "github-actions[bot]@users.noreply.github.com"
  git-token:
    required: true
    description: "Personal Access Token used to commit/create PR on output repository."

runs:
  using: "composite"
  steps:
    - run: echo '::echo::on'
      shell: bash

    - run: cat "${{ github.event_path }}"
      shell: bash

    - run: |
        echo "ACTION_REPO=$( echo $GITHUB_ACTION | sed 's/_/\//g' | sed 's/\///' )" >> $GITHUB_ENV
        echo "PR_BRANCH=${{ inputs.pr-branch-prefix }}---$(date +'%Y-%m-%d--%H-%M-%S')" >> $GITHUB_ENV
        echo "PR_MESSAGE=${{ inputs.pr-message }}" >> $GITHUB_ENV
        echo "TMP_DSTDIR=./dest" >> $GITHUB_ENV
        echo "PR_TITLE_APPENDIX= ${{ inputs.target-repo }}" >> $GITHUB_ENV
        echo "COMMIT_TITLE_APPENDIX= - ${{ inputs.target-repo }}" >> $GITHUB_ENV
        echo "target repo processed as: ${{ inputs.target-repo}}"
      shell: bash

    - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      with:
        persist-credentials: false
        path: "${{ env.TMP_DSTDIR }}"
        repository: "${{ inputs.output-repo }}"

    - working-directory: "${{ env.TMP_DSTDIR }}"
      run: |
       git config --global user.name "${{ inputs.git-name }}"
       git config --global user.email "${{ inputs.git-email }}"
       git config --global url."https://${{ inputs.git-token }}@github.com/".insteadOf "https://github.com/"
       mkdir -p "${{ inputs.output-directory }}"
      shell: bash
    
    - working-directory: "${{ env.TMP_DSTDIR }}"
      run: |
        git checkout -b "${{ env.PR_BRANCH }}"
        git remote add -f ${{ inputs.output-directory }}/${{ inputs.target-repo }} https://github.com/${{ inputs.target-repo }}
        git merge -s ours --no-commit --allow-unrelated-histories ${{ inputs.output-directory }}/${{ inputs.target-repo}}/${{ inputs.output-branch }}
        git read-tree --prefix=${{ inputs.output-directory }}/${{ inputs.target-repo}} -u ${{ inputs.output-directory }}/${{ inputs.target-repo}}/${{ inputs.output-branch }}
        git commit -m "Subtree merged in ${{ inputs.target-repo }}"
        git push origin "${{ env.PR_BRANCH }}"
      shell: bash
  
    - working-directory: "${{ env.TMP_DSTDIR }}"
      run: |
        prUrl=$(curl -X POST -H "Accept:application/vnd.github.v3+json" "https://${{ inputs.git-token }}@api.github.com/repos/${{ inputs.output-repo }}/pulls" -d "{ \"title\":\"${{ inputs.pr-title }}${{ env.PR_TITLE_APPENDIX }}\", \"body\":\"${{ env.PR_MESSAGE }}\", \"head\":\"${{ env.PR_BRANCH }}\", \"base\":\"${{ inputs.output-branch }}\" }" | jq '.html_url')
        echo "prUrl=$prUrl" >> "$GITHUB_OUTPUT"
        # curl -X POST -H "Accept:application/vnd.github.v3+json" "https://${{ inputs.git-token }}@api.github.com/repos/${{ inputs.output-repo }}/pulls" -d "{ \"title\":\"${{ inputs.pr-title }}${{ env.PR_TITLE_APPENDIX }}\", \"body\":\"${{ env.PR_MESSAGE }}\", \"head\":\"${{ env.PR_BRANCH }}\", \"base\":\"${{ inputs.output-branch }}\" }"
      shell: bash
